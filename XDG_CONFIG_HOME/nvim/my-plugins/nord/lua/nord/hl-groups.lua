local c = require("nord.colours")
return {
	-- Editor Highlights
	Normal = { fg = c.fg, bg = c.bg },
	ColorColumn = { bg = c.bg_hl },
	Conceal = { fg = c.fg_fade },
	Cursor = { fg = c.bg, bg = c.fg },
	lCursor = { link = "Cursor" },
	CursorIM = { link = "Cursor" },
	CursorColumn = { link = "ColorColumn" },
	CursorLine = { link = "ColorColumn" },
	Directory = { fg = c.directory },
	DiffAdd = { bg = c.diff_add_fade },
	DiffChange = { bg = c.diff_change_fade },
	DiffDelete = { bg = c.diff_delete_fade },
	DiffText = { bg = c.diff_text_fade },
	EndOfBuffer = { fg = c.fg_fade },
	TermCursor = { link = "Cursor" },
	TermCursorNC = { link = "Cursor" },
	ErrorMsg = { fg = c.error },
	VertSplit = { fg = c.border },
	Folded = { fg = c.comment, bg = c.bg_float },
	FoldColumn = { fg = c.fg_fade },
	SignColumn = { link = "Normal" },
	IncSearch = { fg = c.bg, bg = c.incsearch },
	Substitute = { link = "Search" },
	LineNr = { fg = c.fg_fade },
	LineNrAbove = { fg = c.fg_fade },
	LineNrBelow = { fg = c.fg_fade },
	CursorLineNr = { fg = c.border },
	MatchParen = { fg = c.attention, att = "bold" },
	ModeMsg = { link = "Normal" },
	MsgArea = { link = "Normal" },
	MsgSeparator = { bg = c.visual },
	MoreMsg = { fg = c.attention },
	NonText = { fg = c.fg_fade },
	NormalFloat = { fg = c.fg, bg = c.bg_float },
	NormalNC = { link = "Normal" },
	Pmenu = { fg = c.border, bg = c.bg_float },
	PmenuSel = { bg = c.selection },
	PmenuSbar = { fg = c.border, bg = c.bg_float },
	PmenuThumb = { fg = c.border, bg = c.border },
	Question = { fg = c.attention },
	QuickFixLine = { bg = c.visual },
	Search = { bg = c.search },
	SpecialKey = { link = "NonText" },
	SpellBad = { sp = c.error, att = "undercurl" },
	SpellCap = { sp = c.warning, att = "undercurl" },
	SpellLocal = { sp = c.hint, att = "undercurl" },
	SpellRare = { sp = c.note, att = "undercurl" },
	StatusLine = { fg = c.fg, bg = c.status },
	StatusLineNC = { fg = c.fg_fade, bg = c.bg_hl },
	TabLine = { fg = c.fg_fade, bg = c.bg_hl },
	TabLineFill = { fg = c.fg, bg = c.bg_hl },
	TabLineSel = { fg = c.fg, bg = c.selection },
	Title = { fg = c.title, att = "bold" },
	Visual = { bg = c.visual },
	VisualNOS = { link = "Visual" },
	WarningMsg = { fg = c.warning },
	WhiteSpace = { link = "NonText" },
	WildMenu = { fg = c.selection, att = "bold" },
	FloatBorder = { fg = c.border, bg = c.bg_float },

	-- Syntax Highlights
	Comment = { fg = c.comment, att = "italic" },
	Constant = { fg = c.fg, att = "bold" },
	String = { fg = c.string },
	Character = { link = "String" },
	Number = { fg = c.number },
	Boolean = { fg = c.number },
	Float = { link = "Number" },
	Identifier = { fg = c.fg },
	Function = { fg = c.func },
	Statement = { link = "Keyword" },
	Conditional = { link = "Keyword" },
	Repeat = { link = "Keyword" },
	Label = { link = "Keyword" },
	Operator = { fg = c.comment },
	Keyword = { fg = c.keyword },
	Exception = { link = "Keyword" },
	PreProc = { link = "Macro" },
	Include = { link = "Macro" },
	Define = { link = "Macro" },
	Macro = { fg = c.macro },
	PreCondit = { link = "Macro" },
	Type = { fg = c.type },
	StorageClass = { link = "Type" },
	Structure = { link = "Type" },
	Typedef = { link = "Type" },
	Special = { fg = c.fg },
	SpecialChar = { link = "Character" },
	Tag = { fg = c.tag },
	Delimiter = { fg = c.comment },
	SpecialComment = { link = "Comment" },
	Debug = { fg = c.attention },
	Underlined = { att = "underline" },
	Ignore = { fg = c.fg_fade },
	Error = { fg = c.error },
	Todo = { fg = c.todo, att = "bold,italic" },
	helpCommand = { fg = c.func },
	helpExample = { link = "String" },
	helpHyperTextEntry = { link = "Title" },
	helpHyperTextJump = { link = "Tag" },
	helpOption = { link = "Tag" },
	healthSuccess = { fg = c.success },

	-- TreeSitter Highlights
	TSPunctDelimiter = { link = "Delimiter" },
	TSPunctBracket = { link = "TSPunctDelimiter" },
	TSPunctSpecial = { link = "TSPunctDelimiter" },

	TSConstant = { link = "Constant" },
	TSConstMacro = { fg = c.macro, att = "bold"},
	TSConstBuiltin = { fg = c.keyword, att = "bold" },
	TSString = { link = "String" },
	TSStringRegex = { link = "TSString" },
	TSStringEscape = { fg = c.escape },
	TSStringSpecial = { link = "TSString" },
	TSCharacter = { link = "Character" },
	TSNumber = { link = "Number" },
	TSBoolean = { link = "Boolean" },
	TSFloat = { link = "Float" },

	TSFunction = { link = "Function" },
	TSFuncBuiltin = { link = "TSFunction" },
	TSFuncMacro = { link = "Macro" },
	TSParameter = { fg = c.fg },
	TSParameterReference = { link = "TSParameter" },
	TSMethod = { link = "TSFunction" },
	TSField = { fg = c.fg },
	TSProperty = { fg = c.fg },
	TSConstructor = { link = "TSFunction" },
	TSAnnotation = { fg = c.attention },
	TSAttribute = { link = "TSAnnotation" },
	TSNamespace = { fg = c.fg },
	TSSymbol = { fg = c.fg },

	TSConditional = { link = "Conditional" },
	TSRepeat = { link = "Repeat" },
	TSLabel = { link = "Label" },
	TSOperator = { link = "Operator" },
	TSKeyword = { link = "Keyword" },
	TSKeywordFunction = { link = "TSKeyword" },
	TSKeywordOperator = { link = "TSKeyword" },
	TSKeywordReturn = { link = "TSKeyword" },
	TSException = { link = "Exception" },

	TSType = { link = "Type" },
	TSTypeBuiltin = { link = "Type" },
	TSInclude = { link = "Include" },

	TSVariable = { link = "Identifier" },
	TSVariableBuiltin = { link = "TSKeyword" },

	TSText = { fg = c.fg },
	TSStrong = { att = "bold" },
	TSEmphasis = { att = "italic" },
	TSUnderline = { att = "undercurl" },
	TSStrike = { att = "strikethrough" },
	TSMath = { link = "Comment" },
	TSTextReference = { fg = c.info },
	TSEnvironment = { link = "TSText" },
	TSEnvironmentName = { link = "TSType" },
	TSTitle = { link = "Title" },
	TSLiteral = { link = "TSText" },
	TSURI = { link = "Underlined" },

	TSComment = { link = "Comment" },
	TSNote = { fg = c.note },
	TSWarning = { fg = c.warning },
	TSDanger = { fg = c.danger },
	TSError = { sp = c.error, att = "undercurl" },

	TSTag = { link = "TSKeyword" },
	TSTagDelimiter = { link = "TSPunctDelimiter" },
	TSTagAttribute = { link = "TSProperty" },

	-- LSP Highlights
	LspReferenceText = { bg = c.visual_fade },
	LspReferenceRead = { bg = c.visual_fade },
	LspReferenceWrite = { bg = c.visual_fade },

	DiagnosticError = { fg = c.error },
	DiagnosticWarn = { fg = c.warning },
	DiagnosticInfo = { fg = c.info },
	DiagnosticHint = { fg = c.hint },

	DiagnosticVirtualTextError = { link = "DiagnosticError" },
	DiagnosticVirtualTextWarn = { link = "DiagnosticWarn" },
	DiagnosticVirtualTextInfo = { link = "DiagnosticInfo" },
	DiagnosticVirtualTextHint = { link = "DiagnosticHint" },

	DiagnosticUnderlineError = { sp = c.error, att = "undercurl" },
	DiagnosticUnderlineWarn = { sp = c.warning, att = "undercurl" },
	DiagnosticUnderlineInfo = { sp = c.info, att = "undercurl" },
	DiagnosticUnderlineHint = { sp = c.hint, att = "undercurl" },

	DiagnosticFloatingError = { link = "DiagnosticError" },
	DiagnosticFloatingWarn = { link = "DiagnosticWarn" },
	DiagnosticFloatingInfo = { link = "DiagnosticInfo" },
	DiagnosticFloatingHint = { link = "DiagnosticHint" },

	DiagnosticSignError = { link = "DiagnosticError" },
	DiagnosticSignWarn = { link = "DiagnosticWarn" },
	DiagnosticSignInfo = { link = "DiagnosticInfo" },
	DiagnosticSignHint = { link = "DiagnosticHint" },

	LspCodeLens = { fg = c.comment, bg = c.bg_float },
	LspCodeLensSeparator = { fg = c.fg, bg = c.bg_float },

	LspSignatureActiveParameter = { link = "Visual" },
}
